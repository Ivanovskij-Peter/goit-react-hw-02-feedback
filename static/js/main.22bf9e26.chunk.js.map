{"version":3,"sources":["components/statistic/StatisticItems.js","components/notifications/Notifications.js","components/statistic/Statistics.js","components/feedback/Feedback.js","components/section/Section.js","components/App.js","index.js"],"names":["StatisticItems","good","neutral","bad","total","positivePercentage","Notifications","massage","status","Statistics","props","message","Feedback","options","onLeaveFeedback","checkBtn","event","target","name","Object","keys","map","element","onClick","key","Section","title","children","state","App","addFeedback","setState","prevState","TotalFeedback","values","reduce","acc","el","PositiveFeedbackPercentage","Math","floor","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"sOAWeA,EATQ,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACrB,oCACE,mCAASJ,GACT,sCAAYC,GACZ,kCAAQC,GACR,oCAAUC,GACV,gDAAsBC,KCJXC,EAFO,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,2BAAIA,ICEvCC,GAAS,EAgBEC,EAZI,SAAC,GAAkB,IAAbC,EAAY,oBACnC,OACE,oCACE,0CACCF,EACC,kBAAC,EAAmBE,GAEpB,kBAAC,EAAD,CAAcC,QAAQ,wBCKfC,EAjBE,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBACrBC,EAAW,SAAAC,GDETR,GCDG,EACTM,EAAgBE,EAAMC,OAAOC,OAE/B,OACE,oCACE,6BACGC,OAAOC,KAAKP,GAASQ,KAAI,SAAAC,GAAO,OAC/B,4BAAQC,QAASR,EAAUS,IAAKF,EAASJ,KAAMI,GAC5CA,SCAEG,EAXC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,oCACE,6BACE,4BAAKD,GACJC,KCFHC,EAAQ,CACZ3B,KAAM,EACNC,QAAS,EACTC,IAAK,GAqCQ0B,E,4MAlCbD,M,eAAaA,G,EAEbE,YAAc,SAAAZ,GACZ,EAAKa,UAAS,SAAAC,GACZ,OAAO,eAAGd,EAAOc,EAAUd,GAAQ,O,EAIvCe,cAAgB,WACd,OAAOd,OAAOe,OAAO,EAAKN,OAAOO,QAAO,SAACC,EAAKC,GAAN,OAAaD,EAAMC,IAAI,I,EAEjEC,2BAA6B,WAC3B,IAAMlC,EAAQ,EAAK6B,gBACbhC,EAAO,EAAK2B,MAAM3B,KACxB,OAAOsC,KAAKC,MAAc,IAAPvC,EAAcG,GAAS,K,uDAG1C,OACE,oCACE,kBAAC,EAAD,CAASsB,MAAM,yBACb,kBAAC,EAAD,CAAUb,QAASe,EAAOd,gBAAiB2B,KAAKX,cAChD,kBAAC,EAAD,CACE7B,KAAMwC,KAAKb,MAAM3B,KACjBC,QAASuC,KAAKb,MAAM1B,QACpBC,IAAKsC,KAAKb,MAAMzB,IAChBC,MAAOqC,KAAKR,gBACZ5B,mBAAoBoC,KAAKH,qC,GA3BnBI,IAAMC,WCNxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.22bf9e26.chunk.js","sourcesContent":["import React from 'react';\n\nconst StatisticItems = ({ good, neutral, bad, total, positivePercentage }) => (\n  <>\n    <p>Good:{good}</p>\n    <p>Neutral:{neutral}</p>\n    <p>Bad:{bad}</p>\n    <p>Total:{total}</p>\n    <p>Positive feedback:{positivePercentage}</p>\n  </>\n);\nexport default StatisticItems;\n","import React from 'react';\n\nconst Notifications = ({ massage }) => <p>{massage}</p>;\n\nexport default Notifications;\n","import React from 'react';\nimport StatisticItems from './StatisticItems';\nimport Notification from '../notifications/Notifications';\n\nlet status = false;\nexport const getStart = flag => {\n  return (status = flag);\n};\nconst Statistics = ({ ...props }) => {\n  return (\n    <>\n      <h2>Statistics</h2>\n      {status ? (\n        <StatisticItems {...props} />\n      ) : (\n        <Notification message=\"No feedback given\" />\n      )}\n    </>\n  );\n};\nexport default Statistics;\n","import React from 'react';\nimport { getStart } from '../statistic/Statistics';\n\nconst Feedback = ({ options, onLeaveFeedback }) => {\n  const checkBtn = event => {\n    getStart(true);\n    onLeaveFeedback(event.target.name);\n  };\n  return (\n    <>\n      <div>\n        {Object.keys(options).map(element => (\n          <button onClick={checkBtn} key={element} name={element}>\n            {element}\n          </button>\n        ))}\n      </div>\n    </>\n  );\n};\nexport default Feedback;\n","import React from 'react';\n\nconst Section = ({ title, children }) => {\n  return (\n    <>\n      <div>\n        <h1>{title}</h1>\n        {children}\n      </div>\n    </>\n  );\n};\n\nexport default Section;\n","import React from 'react';\nimport Feedback from './feedback/Feedback';\nimport Section from './section/Section';\nimport Statistics from './statistic/Statistics';\n\nconst state = {\n  good: 0,\n  neutral: 0,\n  bad: 0,\n};\nclass App extends React.Component {\n  state = { ...state };\n\n  addFeedback = name => {\n    this.setState(prevState => {\n      return { [name]: prevState[name] + 1 };\n    });\n  };\n\n  TotalFeedback = () => {\n    return Object.values(this.state).reduce((acc, el) => acc + el, 0);\n  };\n  PositiveFeedbackPercentage = () => {\n    const total = this.TotalFeedback();\n    const good = this.state.good;\n    return Math.floor((good * 100) / total) + '%';\n  };\n  render() {\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <Feedback options={state} onLeaveFeedback={this.addFeedback} />\n          <Statistics\n            good={this.state.good}\n            neutral={this.state.neutral}\n            bad={this.state.bad}\n            total={this.TotalFeedback()}\n            positivePercentage={this.PositiveFeedbackPercentage()}\n          />\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}